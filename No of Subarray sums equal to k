#time complexity: O(n)
#space complexity: O(n)
#did it run on leetcode: yes
class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        map1 = {0: 1}
        count = 0
        rsum = 0
        for num in nums:
            rsum += num
            if (rsum-k) in map1:
                count+= map1[rsum-k]

            if rsum not in map1:
                map1[rsum] = 1
            else:
                map1[rsum] += 1
        
        return count
