//time complexity: O(n)
//space complexity: O(1)
//successfully executed on leetcode

class LongestPalindrome {
    public int longestPalindrome(String s) {
        HashSet<Character> set = new HashSet();
        int count=0;

        for(int i =0; i<s.length();i++){
            char ch = s.charAt(i);
            if(!set.contains(ch)){
                set.add(ch);
            }

            //remove the element if already exist and increment count by 2
            else{
                count=count+2;
                set.remove(ch);
            }
        }
        //check if set contains element if it is, pull up one element
        if(!set.isEmpty()){
            count= count+1;
        }
        return count;
    }
}
