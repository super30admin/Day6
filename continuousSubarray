class Solution:
    def findMaxLength(self, nums: List[int]) -> int:
        # Generate all subarrays, brute force way
        # Use two for loops, start at 'i' and go till 'j'

        if nums == None or len(nums) == 0:
            return 0
        rSum = 0
        Max = 0
        hashMap = {}
        hashMap[0] = -1
        #Construct a hashMap of rSum as key and the index at which it occured as value, (compute difference of indexes if occured multiple times)
        for i in range(len(nums)):
            if nums[i] == 0:
                rSum = rSum - 1
            if nums[i] == 1:
                rSum += 1
            
            if hashMap.get(rSum) != None:
                Max = max(Max, (i - hashMap.get(rSum)))
            
            else:
                hashMap[rSum] = i
        return Max
        




        