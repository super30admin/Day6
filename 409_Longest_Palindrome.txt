// Time Complexity : o( n)
// Space Complexity : o(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach
/*
*  When a new character occurs add it to set.
*  If already present in set increment result by 2 and remove from set eg : aabb
*  if the set contains any characters, increment set by one eg : aacbb
* */

class Solution {
    public int longestPalindrome(String s) {
        HashSet<Character> set = new HashSet<>();
        int result = 0;
        for(char c : s.toCharArray()){
            if(set.contains(c)){
                set.remove(c);
                result+=2;
            } else {
                set.add(c);
            }
        }

        if(!set.isEmpty()) result++;
        return result;
    }
}