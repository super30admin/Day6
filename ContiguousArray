//time complexity: O(n)
//space complexity: O(n)
//successfully executed on leetcode

class ContiguousArray {
    public int findMaxLength(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap();
        map.put(0,-1);
        int max=0;
        int rSum =0;
        
        // updating running count 
        for(int i=0;i<nums.length; i++){
            if(nums[i]==0){
                rSum--;
            }
           else{
              rSum++;  
            }
            if(!map.containsKey(rSum)){
                map.put(rSum, i);
            }
            else{
                //checking maximum difference
                max= Math.max(max, i-map.get(rSum));
            }   
        }
        return max;
    }
}
