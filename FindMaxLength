// Time and Space Complixity : O(n)


class Solution {
    public int findMaxLength(int[] nums) {

        int rsum = 0;
        int max = 0;
        HashMap<Integer,Integer> map = new HashMap<>();
        map.put(0,-1);
        for(int i =0;i< nums.length;i++) {

            if(nums[i] == 1) {   // calulating the running sum if nums array value is 1 at index i.
                rsum+=1;
            }
            else {
                rsum-=1;
            }
            if(map.containsKey(rsum)) {
                max = Math.max(max, i - map.get(rsum));    calculating the max index.
            }
            else {
                map.put(rsum,i);
            }
        }
        return max;
        
    }
}
